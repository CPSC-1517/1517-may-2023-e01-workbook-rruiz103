@page
@model WebApp.Pages.Samples.BasicDataManagementModel
@{
    ViewData["Title"] = "Basic Data Management";
   
}

<h1>Basic Data Management</h1>
<blockquote>This page will explore the most common controls you will probably use on a form. There will be 
    multiple buttons (events) to code in the PageModel (a.k.a Code-Behind). The controls will be a mix of
    label, input, select, textarea and button.
</blockquote>

@*

Controls: label, input, select, textarea and button

<label> does not need arguments
        can have helper tags: asp-for, asp-attributes, asp-validation-for
        depending on css stylesheets, you can get different looks

<input> this is your major control to use for data input
        it can be set to various types of input data using the attribute type="xxxx"
        can tie the control to a property on the PageModel using asp-for="xxxx"
           where xxx is the name of the property on the PageModel
        the step atrribute is used in indicate the number of decimal places to allowed for
           your value. The default is 1 (integer stepping). If you want to allow decimal places
           then you need to set the step attribute to a value less than 1 (ie 0.01)

<textarea> use to accept form input for large amounts of text (ie comments)
           can tie the control to a property on the PageModel using asp-for="xxxx"
              where xxx is the name of the property on the PageModel
           can set the rows and cols attributes to control the size of the textarea

<select> use to accept form input for a list of items
        and other names: combobox, dropdownlist, selection list
        <select> requires a paired element tags set 
<option> this control can have an optional prompt line which would be
        first line in the list. 
        <select> requires a paired element tags set
        the option tag can have a value attribute that will be returned  to the page model

        <option> requires a paired element tags set
        each line in the list is a separate option tag
        this control can be coded with hardcoded value or
        logically load a collection of data 
        syntax of option tag is:
        <option value="xxxx">yyy</option>
        where xxx 
*@

<form method="post">

    <label>
        Enter a number (standard text box control):
        <input type="number" asp-for="Num" step="0.01"/>
    </label>
    <label>
        TextArea for large amounts of text (ie comments):
        <textarea asp-for="MassText" rows="5" cols="60"></textarea>
    </label>
    <label>
        Select a favorite course from the dropdown list (select control):
        <select asp-for="FavouriteCourse">
            <option value="0"> on screen prompt line ....  </option>
            <option value="1008"> Digital Media Tools ....  </option>
            <option value="1012"> Programming Fundamentals ....  </option>
            <option value="1017"> Web Design Fundamentals ....  </option>
            <option value="1517"> Intro to Web Applications ....  </option>
        </select>
    </label>
    <label>
        Using a Select without a value on the option tag:
        <select asp-for="FavouriteCourseNoValueOnOption">
            <option > on screen prompt line ....  </option>
            <option > Digital Media Tools ....  </option>
            <option > Programming Fundamentals ....  </option>
            <option > Web Design Fundamentals ....  </option>
            <option > Intro to Web Applications ....  </option>
        </select>
    </label>
    <br></br>
    <button type="submit asp-page-handler="ControlProcessing"> Submit Form Data</button>


</form>
<br></br>
Processing Results @Model.FeedBack;